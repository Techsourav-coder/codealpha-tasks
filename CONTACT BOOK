import json
import os

FILE_NAME = "contacts.json"

def load_contacts():
    if os.path.exists(FILE_NAME):
        with open(FILE_NAME, "r") as file:
            return json.load(file)
    return []

def save_contacts(contacts):
    with open(FILE_NAME, "w") as file:
        json.dump(contacts, file, indent=4)

def add_contact(contacts):
    name = input("Name: ")
    phone = input("Phone: ")
    email = input("Email: ")
    address = input("Address: ")
    contacts.append({
        "name": name,
        "phone": phone,
        "email": email,
        "address": address
    })
    save_contacts(contacts)
    print("Contact added!")

def view_contacts(contacts):
    if not contacts:
        print("No contacts found.")
        return
    print("\n=== Contact List ===")
    for i, contact in enumerate(contacts, 1):
        print(f"{i}. {contact['name']} - {contact['phone']}")

def search_contact(contacts):
    keyword = input("Enter name or phone to search: ").lower()
    found = False
    for contact in contacts:
        if keyword in contact['name'].lower() or keyword in contact['phone']:
            print(f"\nFound Contact:\nName: {contact['name']}\nPhone: {contact['phone']}\nEmail: {contact['email']}\nAddress: {contact['address']}")
            found = True
    if not found:
        print("No matching contact found.")

def update_contact(contacts):
    view_contacts(contacts)
    try:
        index = int(input("Enter contact number to update: ")) - 1
        if 0 <= index < len(contacts):
            print("Leave blank to keep existing value.")
            contact = contacts[index]
            name = input(f"New Name [{contact['name']}]: ") or contact['name']
            phone = input(f"New Phone [{contact['phone']}]: ") or contact['phone']
            email = input(f"New Email [{contact['email']}]: ") or contact['email']
            address = input(f"New Address [{contact['address']}]: ") or contact['address']
            contacts[index] = {
                "name": name,
                "phone": phone,
                "email": email,
                "address": address
            }
            save_contacts(contacts)
            print("Contact updated!")
        else:
            print("Invalid contact number.")
    except ValueError:
        print("Invalid input.")

def delete_contact(contacts):
    view_contacts(contacts)
    try:
        index = int(input("Enter contact number to delete: ")) - 1
        if 0 <= index < len(contacts):
            confirm = input(f"Are you sure you want to delete {contacts[index]['name']}? (y/n): ")
            if confirm.lower() == 'y':
                contacts.pop(index)
                save_contacts(contacts)
                print("Contact deleted.")
        else:
            print("Invalid contact number.")
    except ValueError:
        print("Invalid input.")

def show_menu():
    print("\n=== CONTACT MANAGER ===")
    print("1. Add Contact")
    print("2. View All Contacts")
    print("3. Search Contact")
    print("4. Update Contact")
    print("5. Delete Contact")
    print("6. Exit")

def main():
    contacts = load_contacts()
    while True:
        show_menu()
        choice = input("Choose an option: ")
        if choice == "1":
            add_contact(contacts)
        elif choice == "2":
            view_contacts(contacts)
        elif choice == "3":
            search_contact(contacts)
        elif choice == "4":
            update_contact(contacts)
        elif choice == "5":
            delete_contact(contacts)
        elif choice == "6":
            print("Goodbye!")
            break
        else:
            print("Invalid choice. Try again.")

if __name__ == "__main__":
    main()

#OUTPUT:-
=== CONTACT MANAGER ===
1. Add Contact
2. View All Contacts
3. Search Contact
4. Update Contact
5. Delete Contact
6. Exit
